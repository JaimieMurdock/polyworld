#!/bin/sh
##### CONFIGURABLE OPTIONS HERE
GNUPLOT="/usr/local/bin/gnuplot"	# this GNUplot *MUST MUST MUST* be version 4.2.  NOT version 4.0.  Check with gnuplot -V
plotNeuron="./plotNeuron"	# assumes ./plotNeuron is in the same directory as ./mplotNeuron
GNUPLOT_SCALEPLOT_BY="1.3" 
mplot_filename="/tmp/,$$.mplot"
HIGHEST_BEHAVIOR_NEURON="7"
#####
dims="$1"
TO_GET="$2"
directory=$(echo "${3}" | sed -e 's/\/$//') 	# remove any trailing slash
GNUPLOT_SIZEX=$(echo "(846 * $GNUPLOT_SCALEPLOT_BY) / 1" | bc)  # the / 1 truncates to an integer
GNUPLOT_SIZEY=$(echo "(594 * $GNUPLOT_SCALEPLOT_BY) / 1" | bc)  # the / 1 truncates to an integer

if [ ! -d "${directory}" ]
then
	echo "This program takes: 
        ./mplotNeuron <X>x<Y> <range> <directory>
	<X> and <Y> are positive integers representing the dimensions of the multiplot.
        possible values for <range>: N; A; N-N; b[1-$HIGHEST_BEHAVIOR_NEURON]; N-b[1-$HIGHEST_BEHAVIOR_NEURON]; b[1-$HIGHEST_BEHAVIOR_NEURON]-b[1-$HIGHEST_BEHAVIOR_NEURON]
          A = All neurons
          b[1-$HIGHEST_BEHAVIOR_NEURON] = behavior neurons 1-$HIGHEST_BEHAVIOR_NEURON
          N = neuron with index N, counting from zero"
	exit;
fi

if [ -f "$mplot_filename" ]	# if the mplot_filename already exists (somehow or another), delete it.
then
	echo "'$mplot_filename' already exists!  Deleting it..."
	rm "$mplot_filename"
fi
############################## check the dimensions to make sure they can fit all of the plots
numplots=$(ls -1 ${directory}/ | wc -l | tr -d ' ')
dimX=$(echo "$dims" | tr 'x' '	' | cut -f1)
dimY=$(echo "$dims" | tr 'x' '	' | cut -f2)
numplotscanprint=$(echo "$dimX * $dimY" | bc)

if [ "$numplots" -gt "$numplotscanprint" ]
then
	echo "* Warning: There are $numplots files in '$directory', but in ${dimX}x${dimY} can only plot the first $numplotscanprint."
else
	echo "dims=$dimX, $dimY"
fi
################## play with the print size to reflect the dimX by dimY style.
# run plotNeuron for each file in the directory...
numfilesprocessed=0
for BFfile in ${directory}/*
do
	if [ "$numfilesprocessed" -ge "$numplotscanprint" ]
	then
		break;
	fi
	echo "- Running: '$plotNeuron $TO_GET $BFfile mplot=$mplot_filename'..."
	$plotNeuron $TO_GET $BFfile mplot=$mplot_filename > /dev/null
	numfilesprocessed=$(echo "$numfilesprocessed + 1" | bc)
done
########################################################################
########################################################################

GNUPLOT_COMMANDS="
# the beginning commands to setup the multiplot
reset
set terminal aqua 0 size $GNUPLOT_SIZEX $GNUPLOT_SIZEY
set multiplot layout $dimX, $dimY title '$directory/'
set tmargin 1.5
"

numfilesprocessed=0
# now to get their logfiles..
for BFfile in `cat "$mplot_filename"`
do
	if [ "$numfilesprocessed" -ge "$numplotscanprint" ]
	then
		break;
	fi

	echo "- Processing BFFile=${BFfile}..."
	plotsettings=$(grep '^#' "${BFfile}" | sed -e 's/^[#]mplot //' | sed -e 's/^[#]mplotnormal //')

	if [ "$numfilesprocessed" -ne "0" ]
	then
		# we only want the key to be displayed for the very first plot, and we want the tmargin to be 1.2 for all other plots.
		plotsettings=$(echo -e "unset key
${plotsettings}" | grep -v '^set key')
	fi

	GNUPLOT_COMMANDS="${GNUPLOT_COMMANDS}
${plotsettings}"

	numfilesprocessed=$(echo "$numfilesprocessed + 1" | bc)
done

GNUPLOT_COMMANDS="${GNUPLOT_COMMANDS}
unset multiplot"

# now lets plot!
${GNUPLOT} << EOF

${GNUPLOT_COMMANDS}

EOF

echo "Now for the smoothed version."
########## Now print the Smoothed version

numfilesprocessed=0
GNUPLOT_COMMANDS="
# the beginning commands to setup the multiplot
reset
set terminal aqua 0 size $GNUPLOT_SIZEX $GNUPLOT_SIZEY
set multiplot layout $dimX, $dimY title '$directory/ (SMOOTHED)'
set tmargin 1.5
"
plotsettings=""
# now to get their logfiles..
for BFfile in `cat "$mplot_filename"`
do
	if [ "$numfilesprocessed" -ge "$numplotscanprint" ]
	then
		break;
	fi

	echo "- Processing BFFile=${BFfile}..."
	plotsettings=$(grep '^#' "${BFfile}" | sed -e 's/^[#]mplot //' | sed -e 's/^[#]mplotsmooth //')

	if [ "$numfilesprocessed" -ne "0" ]
	then
		# we only want the key to be displayed for the very first plot, and we want the tmargin to be 1.2 for all other plots.
		plotsettings=$(echo -e "unset key
${plotsettings}" | grep -v '^set key')
	fi

	GNUPLOT_COMMANDS="${GNUPLOT_COMMANDS}
${plotsettings}"

	numfilesprocessed=$(echo "$numfilesprocessed + 1" | bc)
done

GNUPLOT_COMMANDS="${GNUPLOT_COMMANDS}
unset multiplot"

# now lets plot!
${GNUPLOT} << EOF

${GNUPLOT_COMMANDS}

EOF
